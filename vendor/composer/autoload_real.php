<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInitacf32b81a9c42760895ac8257f2b5551
{

    private static $loader;//Thuộc tính
    //Require class ClassLoader.php
    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }
    //Done
    public static function getLoader()
    {
        if (null !== self::$loader) {//Dùng self thay cho this để tuy cập thuộc tính static
            return self::$loader;
        }
        spl_autoload_register(array('ComposerAutoloaderInitacf32b81a9c42760895ac8257f2b5551', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitacf32b81a9c42760895ac8257f2b5551', 'loadClassLoader'));
        //PHP_VERSION_ID:Vesion hiện tại của PHP
        //defined:Kiểm tra hằng có tồn tại hay không?
        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        //=true
        if ($useStaticLoader) {
            //rerquire autoload_static.php
            require_once __DIR__ . '/autoload_static.php';
            //Nhảu đến phương thức tĩnh của class-autoload_static.php
            call_user_func(\Composer\Autoload\ComposerStaticInitacf32b81a9c42760895ac8257f2b5551::getInitializer($loader));
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }
        //Nhảy đến phương thức register() của file ClassLoader.php
        $loader->register(true);
        //=true
        if ($useStaticLoader) {
            //Nhảy đến thuộc tính tĩnh $files của autoload_static.php
            $includeFiles = Composer\Autoload\ComposerStaticInitacf32b81a9c42760895ac8257f2b5551::$files;
        } else {
            $includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach ($includeFiles as $fileIdentifier => $file) {
            //Nhảy đến hàm cùng file
            composerRequireacf32b81a9c42760895ac8257f2b5551($fileIdentifier, $file);
        }

        return $loader;
    }
}
//Done
function composerRequireacf32b81a9c42760895ac8257f2b5551($fileIdentifier, $file)
{
    //=true
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        //Nhảy đến file bootstrap.php
        //Nhảy đến file helper.php
        require $file;
        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
    }
}
